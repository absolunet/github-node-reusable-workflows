name: Reusable workflow - Setup

on:
  workflow_call:
    inputs:
      branch-ref:
        required: true
        type: string
      node-version:
        required: false
        type: string
        default: 16
      os:
        required: false
        type: string
        default: ubuntu-latest
      private-registry:
        required: false
        type: boolean
        default: false

jobs:
  setup:
    name: Setup with Node version ${{ inputs.node-version }}
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout repository ${{ inputs.branch-ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch-ref }}
          token: ${{ secrets.GLOBAL_ACCESS_TOKEN }}
      
      - name: Setup Node ${{ inputs.node-version }} for Private NPM
        if:  ${{ inputs.private-registry == 'true' }}
        uses: actions/setup-node@v3
        with:
          always-auth: true
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json
          scope: ${{ secrets.NPMRC_JFROG_ARTIFACTORY_NAMESPACE }}
          registry-url: ${{ secrets.NPMRC_JFROG_ARTIFACTORY_URL }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMRC_JFROG_ARTIFACTORY_TOKEN }}
      
      - name: Setup Node ${{ inputs.node-version }} for Public NPM
        if:  ${{ inputs.private-registry == 'false' }}
        uses: actions/setup-node@v3
        with:
          always-auth: true
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMRC_NPMJS_REGISTRY_TOKEN }}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create Cache
        uses: actions/cache@v3
        id: checkout-repository-cache
        with:
          path: ./*
          key: checkout-repository-cache-${{ github.sha }}
