name: Node Manager reusable workflows - Setup

on:
  workflow_call:
    inputs:
      branch-ref:
        required: true
        type: string
      node-version:
        required: false
        type: string
        default: 16
      os:
        required: false
        type: string
        default: ubuntu-latest
    secrets:
      github-token:
        required: false
      scope:
        required: false
      registry-url:
        required: false
      auth-token:
        required: true
    outputs: 
      has-scope:
        value: ${{ jobs.setup.outputs.has-scope }}
      has-registry-url:
        value: ${{ jobs.setup.outputs.has-registry-url }}

permissions:
  contents: read

jobs:
  setup:
    name: Setup for Node.js ${{ inputs.node-version }} [github-node-manager-reusable-workflows/setup]
    runs-on: ${{ inputs.os }}

    outputs:
      has-scope: ${{ steps.has-secrets-check.outputs.has-scope }}
      has-registry-url: ${{ steps.has-secrets-check.outputs.has-registry-url }}

    steps:
      - id: has-secrets-check
        env:
          SECRET_SCOPE: '${{ secrets.scope }}'
          SECRET_REGISTRY_URL: '${{ secrets.registry-url }}'
        if: ${{ env.SECRET_SCOPE != '' }} && ${{ env.SECRET_REGISTRY_URL != '' }}
        run: echo "::set-output name=has-secrets::true"

      - name: Checkout repository ${{ inputs.branch-ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch-ref }}
          token: ${{ secrets.github-token || github.token }}

      # Standard setup
      - name: Install Node.js ${{ inputs.node-version }}
        if: ${{ steps.has-secrets-check.outputs.has-secrets != 'true' }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json
          scope: ${{ secrets.scope }}
          registry-url: ${{ secrets.registry-url }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.auth-token }}
      # /Standard setup

      # Private Registry setup because it uses _auth instead of standard _authToken
      - name: Install Node.js ${{ inputs.node-version }} for Private Registry
        if: ${{ steps.has-secrets-check.outputs.has-secrets == 'true' }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json

      - name: Generate .npmrc for Private Registry
        if: ${{ steps.has-secrets-check.outputs.has-secrets == 'true' }}
        shell: bash
        run: |
          SCOPE=${{ secrets.scope }}
          REGISTRY=${{ secrets.registry-url }}
          AUTH=${{ secrets.auth-token }}
          echo "${SCOPE}:registry=${REGISTRY}" >> .npmrc
          echo "//${REGISTRY##*//}:_auth=${AUTH}" >> .npmrc
      # /Private Registry


      - name: Install dependencies
        run: npm ci

      - name: Create cache
        uses: actions/cache@v3
        id: checkout-repository-cache
        with:
          path: ./*
          key: checkout-repository-cache-${{ github.sha }}
