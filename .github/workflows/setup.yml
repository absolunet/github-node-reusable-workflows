name: Node Manager reusable workflows - Setup

on:
  workflow_call:
    inputs:
      branch-ref:
        required: true
        type: string
      node-version:
        required: false
        type: string
        default: 16
      os:
        required: false
        type: string
        default: ubuntu-latest

jobs:
  setup:
    name: Setup for Node.js ${{ inputs.node-version }} [github-node-manager-reusable-workflows/setup]
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout repository ${{ inputs.branch-ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch-ref }}
          token: ${{ secrets.GLOBAL_ACCESS_TOKEN }}
      
      - name: Setup Node ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json
      
      # - name: Setup Node ${{ inputs.node-version }} for Private NPM
      #   if:  ${{ inputs.npm-registry == 'private' }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ inputs.node-version }}
      #     # cache: "npm"
      #     # cache-dependency-path: ./package-lock.json
      #     scope: ${{ secrets.NPMRC_JFROG_ARTIFACTORY_NAMESPACE }}
      #     registry-url: ${{ secrets.NPMRC_JFROG_ARTIFACTORY_URL }}
      #     # token: ${{ secrets.NPMRC_JFROG_ARTIFACTORY_TOKEN }}
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPMRC_JFROG_ARTIFACTORY_TOKEN }}
      
      # - name: Setup Node ${{ inputs.node-version }} for Public NPM
      #   if:  ${{ inputs.npm-registry == 'public' }}
      #   uses: actions/setup-node@v3
      #   with:
      #     always-auth: true
      #     node-version: ${{ inputs.node-version }}
      #     cache: "npm"
      #     cache-dependency-path: ./package-lock.json
      #     token: ${{ secrets.NPMRC_NPMJS_REGISTRY_TOKEN }}
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPMRC_NPMJS_REGISTRY_TOKEN }}
          
      - name: Generate NPMRC
        shell: bash
        run: |
          REGISTRY=${{ secrets.NPMRC_JFROG_ARTIFACTORY_URL }}
          REGISTRY_NAMESPACE=${{ secrets.NPMRC_JFROG_ARTIFACTORY_NAMESPACE }}
          echo "${REGISTRY_NAMESPACE}:registry=${REGISTRY}" >> .npmrc
          echo "//${REGISTRY##*//}:always-auth=true" >> .npmrc
          echo "//${REGISTRY##*//}:_auth=${{ secrets.NPMRC_JFROG_ARTIFACTORY_TOKEN }}" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPMRC_NPMJS_REGISTRY_TOKEN }}" >> .npmrc

      - name: Install dependencies
        run: npm ci

      - name: Create cache
        uses: actions/cache@v3
        id: checkout-repository-cache
        with:
          path: ./*
          key: checkout-repository-cache-${{ github.sha }}
