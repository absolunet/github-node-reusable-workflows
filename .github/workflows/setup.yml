name: Node Manager reusable workflows - Setup

on:
  workflow_call:
    inputs:
      branch-ref:
        required: true
        type: string
      node-version:
        required: false
        type: string
        default: 16
      os:
        required: false
        type: string
        default: ubuntu-latest
      access-needed:
        required: false
        type: string

jobs:
  setup:
    name: Setup for Node.js ${{ inputs.node-version }} [github-node-manager-reusable-workflows/setup]
    runs-on: ${{ inputs.os }}
    env:
      public-registry: ${{ inputs.access-needed == 'public-registry' }}
      private-sparks: ${{ inputs.access-needed == 'private-sparks' }}
      no-access: ${{ inputs.access-needed != 'public-registry' && inputs.access-needed != 'private-sparks' }}

    steps:
      - name: Checkout repository ${{ inputs.branch-ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch-ref }}
          token: ${{ secrets.GLOBAL_ACCESS_TOKEN }}

      # No access needed
      - name: Install Node.js ${{ inputs.node-version }}
        if: ${{ env.no-access }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json

      # Public registry access
      - name: Install Node.js ${{ inputs.node-version }} with public registry access
        if: ${{ env.public-registry }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMRC_NPMJS_REGISTRY_TOKEN }}

      # Private Sparks access
      - name: Install Node.js ${{ inputs.node-version }} #with private Sparks access
        if: ${{ env.private-sparks }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json
#          scope: ${{ secrets.JFROG_ARTIFACTORY_NPM_SPARKS_SCOPE }}
#          registry-url: ${{ secrets.JFROG_ARTIFACTORY_NPM_SPARKS_REGISTRY }}
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.JFROG_ARTIFACTORY_NPM_SPARKS_TOKEN }}

      # Patch step for JFrog Artifactory that uses _auth instead of standard _authToken
      - name: Generate .npmrc for JFrog Artifactory
        if: ${{ env.private-sparks }}
        shell: bash
        run: |
          SCOPE=${{ secrets.JFROG_ARTIFACTORY_NPM_SPARKS_SCOPE }}
          REGISTRY=${{ secrets.JFROG_ARTIFACTORY_NPM_SPARKS_REGISTRY }}
          AUTH=${{ secrets.JFROG_ARTIFACTORY_NPM_SPARKS_AUTH }}
          echo "${SCOPE}:registry=${REGISTRY}" >> .npmrc
          echo "//${REGISTRY##*//}:_auth=${AUTH}" >> .npmrc

      - name: DEBUG
        shell: bash
        run: |
          echo "public-registry: ${{public-registry}}"
          echo "private-sparks: ${{private-sparks}}"
          echo "no-access: ${{no-access}}"

      - name: Install dependencies
        run: npm ci

      - name: Create cache
        uses: actions/cache@v3
        id: checkout-repository-cache
        with:
          path: ./*
          key: checkout-repository-cache-${{ github.sha }}
