name: Reusable workflow - Publish

on:
  workflow_call:
    inputs:
      private-registry:
        required: false
        type: boolean
        default: false

jobs:
  publish:
    name: Publish and Tag
    runs-on: ubuntu-latest
    
    steps:
      - name: Use build-cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: ./*
          key: build-cache-${{ github.sha }}

      - name: Setup Node ${{ inputs.node-version }} for Private NPM
        if:  ${{ inputs.private-registry }}
        uses: actions/setup-node@v3
        with:
          always-auth: true
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json
          scope: ${{ secrets.NPMRC_JFROG_ARTIFACTORY_NAMESPACE }}
          registry-url: ${{ secrets.NPMRC_JFROG_ARTIFACTORY_URL }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMRC_JFROG_ARTIFACTORY_TOKEN }}
      
      - name: Setup Node ${{ inputs.node-version }} for Public NPM
        if:  ${{ ! inputs.private-registry }}
        uses: actions/setup-node@v3
        with:
          always-auth: true
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: ./package-lock.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMRC_NPMJS_REGISTRY_TOKEN }}

      - name: NPM publish
        shell: bash
        run: |
          OPTS=();
          if [[ $(npm pkg get version) == *"-"* ]]; then OPTS+=('--tag=next') ; fi
          if [[ $(npm pkg get workspaces) != "{}" ]]; then OPTS+=('--workspaces') ; fi
          npm publish $OPTS --access=public

      - name: Prepare git
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"

      - name: Git Tag
        shell: bash
        run: |
          TAG_VERSION=$(npm pkg get version)
          git tag ${TAG_VERSION}
          git push origin ${TAG_VERSION}